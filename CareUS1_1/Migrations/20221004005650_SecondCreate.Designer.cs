// <auto-generated />
using System;
using CareUS1_1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CareUS1_1.Migrations
{
    [DbContext(typeof(CareUS1_1Context))]
    [Migration("20221004005650_SecondCreate")]
    partial class SecondCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CareUS1_1.Models.Avaliacao", b =>
                {
                    b.Property<Guid>("GuidAvaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("GuidCliente1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("fkGuidCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("nota")
                        .HasColumnType("float");

                    b.HasKey("GuidAvaliacao");

                    b.HasIndex("GuidCliente1");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("CareUS1_1.Models.CareUs.Models.Formacao", b =>
                {
                    b.Property<Guid>("GuidFormacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GuidCliente1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descricaoFormacao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("fkGuidCliente")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GuidFormacao");

                    b.HasIndex("GuidCliente1");

                    b.ToTable("Formacoes");
                });

            modelBuilder.Entity("CareUS1_1.Models.Cliente", b =>
                {
                    b.Property<Guid>("GuidCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("dataNascimentoCliente")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("rg")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuidCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("CareUS1_1.Models.Contato", b =>
                {
                    b.Property<Guid>("GuidContato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GuidCliente1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("fkIdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nomeContato")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("GuidContato");

                    b.HasIndex("GuidCliente1");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("CareUS1_1.Models.Experiencia", b =>
                {
                    b.Property<Guid>("GuidExperiencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GuidCliente1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descricaoExperiencia")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("fkGuidCliente")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GuidExperiencia");

                    b.HasIndex("GuidCliente1");

                    b.ToTable("experiencias");
                });

            modelBuilder.Entity("CareUS1_1.Models.Paciente", b =>
                {
                    b.Property<Guid>("GuidPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GuidCliente1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("dataDeNascimentoPaciente")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("fkGuidCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nomePaciente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GuidPaciente");

                    b.HasIndex("GuidCliente1");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("CareUS1_1.Models.Avaliacao", b =>
                {
                    b.HasOne("CareUS1_1.Models.Cliente", "GuidCliente")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("GuidCliente1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuidCliente");
                });

            modelBuilder.Entity("CareUS1_1.Models.CareUs.Models.Formacao", b =>
                {
                    b.HasOne("CareUS1_1.Models.Cliente", "GuidCliente")
                        .WithMany("Formacoes")
                        .HasForeignKey("GuidCliente1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuidCliente");
                });

            modelBuilder.Entity("CareUS1_1.Models.Contato", b =>
                {
                    b.HasOne("CareUS1_1.Models.Cliente", "GuidCliente")
                        .WithMany("Contatos")
                        .HasForeignKey("GuidCliente1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuidCliente");
                });

            modelBuilder.Entity("CareUS1_1.Models.Experiencia", b =>
                {
                    b.HasOne("CareUS1_1.Models.Cliente", "GuidCliente")
                        .WithMany("Experiencias")
                        .HasForeignKey("GuidCliente1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuidCliente");
                });

            modelBuilder.Entity("CareUS1_1.Models.Paciente", b =>
                {
                    b.HasOne("CareUS1_1.Models.Cliente", "GuidCliente")
                        .WithMany("Pacientes")
                        .HasForeignKey("GuidCliente1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuidCliente");
                });

            modelBuilder.Entity("CareUS1_1.Models.Cliente", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Contatos");

                    b.Navigation("Experiencias");

                    b.Navigation("Formacoes");

                    b.Navigation("Pacientes");
                });
#pragma warning restore 612, 618
        }
    }
}
